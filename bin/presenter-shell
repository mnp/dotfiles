#!/bin/bash

# Execute a directory of commands, prompted nicely.
#
# Create a ".d" style directory of files in sort order, each containing a shell command to display in the presentation:
#
#    01: pwd
#    02: wc -l *
#    03: du -sk * | sort -nr | head -3
#
# Then run presenter-shell with the dir path as arg.  Press any key to perform each command, then N/P/Q for next/prev/quit.
# Adding commentary should be easy if commands can be multiple lines, just use # or : comments.

set -u

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
NORM=$(tput sgr0)
DELAY=0.01

cmddir=${1:-.}
cmdfiles=(`cd $cmddir; ls`)
ncommands=${#cmdfiles[*]}
idx=0

type_string() { 
    for (( i=0; i<${#1}; i++ )); do
      echo -n "${1:$i:1}"
      sleep $DELAY
    done
}

prompt() {
    tput sc
    tput cup $(tput lines) 0
    read -p "$RED $1 $NORM" -s -n 1
    tput rc
}

type_string "now is the time for x"

exit 0

while true; do
    clear

    # show the command first and pause
    echo $GREEN
    cat ${cmdfiles[$idx]}
    echo $NORM
#    echo "(${cmdfiles[$idx]}) $" 
    echo
    prompt ...

    # now run it below and pause for action input
    bash ${cmdfiles[$idx]}
    prompt "[Next/Prev/Quit]:"

    case $REPLY in
        n)
            idx=$[idx+1]
            [[ $idx -ge $ncommands ]] && idx=$[ncommands - 1]
            ;;
        p)
            idx=$[idx-1]
            [[ $idx -lt 0 ]] && idx=0
            ;;
        q)
            exit 0
            ;;
    esac
done
