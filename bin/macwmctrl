#!//usr/bin/env python

# This is a dumb wrapper experiment around AppleScript to look a little bit like the X11 wmctrl for the Emacs ewmctrl wrapper.

# need to support these calls from ewmctrl:
```
(defvar ewmctrl-wmctrl-switches "-lpG")
(call-process-shell-command (concat ewmctrl-wmctrl-path " " ewmctrl-wmctrl-switches) nil bfr)

    $ wmctrl -lpG
    0x0280000a  0 3660   0    54   1920 1053 onyx Terminal
    0x02a00003  0 4720   1    102  1920 1016 onyx Inbox - mitchell.perilstein@gmail.com - Gmail - Mozilla Firefox
    0x03e00007  0 7769   886  322  1024 777  onyx zsafe - KeePassX
    0x06200001  0 9523   119  271  1459 771  onyx Slack | general | Engineers Against Entropy
    0x05000007  0 17220  709  465  645  122  onyx Software Updater
    0x07000143  0 18903  48   147  656  612  onyx emacs@onyx
    -----------------------------------------------------------
    winid      ?? pid    x    y    wid  ht   hst? command

(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -r '" id "' -e '0,-1,-1," width "," height "'"))
(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -c '" id "'"))
(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -r '" id "' -e '0,-1,-1," width "," height "'"))
(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -r '" id "' -I '" name "'"))
(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -r '" id "' -N '" name "'"))
(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -r '" id "' -t '" desktop "'"))
(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -R '" id "'"))
(call-process-shell-command (concat ewmctrl-wmctrl-path " -i -a '" id "'"))
```


# List running apps not backgrounded
# 08:47 $ osascript -e'tell application "System Events" to get the name of every process whose background only is false'
# Google Chrome, Slack, iTerm2, Emacs-x86_64-10_14, Spotify, Finder, idea


# 08:53 $ osascript -e'tell application "Slack" to get id'



# gather all windows
```
use application "System Events"

get the name of every application process whose class of windows contains window

repeat with P in the result

	get (every window of process (contents of P) whose value of attribute "AXMinimized" is false)

	repeat with W in the result

		set position of W to {200, 100}
		set size of W to {1000, 800}

	end repeat

end repeat
```

#+BEGIN_SRC shell
osascript -e 'tell application "System Events" to get (name, id) of every process whose background only is false'
#+END_SRC

#+RESULTS:
